"""The class for logging to server"""
import logging

from django.shortcuts import render 
from django.views import generic

from django.utils.decorators import method_decorator
from django.contrib.auth.decorators import login_required
from orders.models import ( RequestOrders, Site, Orders, ItemPrices ) 


logger = logging.getLogger(__name__)

@method_decorator(login_required, name='dispatch')
class ViewRequests(generic.ListView):
    """"View a list of order requests generated by the site manager."""
    model = RequestOrders
    template_name = 'accounting/requests.html'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['sites_list'] = Site.objects.all()
        return context

@method_decorator(login_required, name='dispatch')
class ViewPurchaseOrders(generic.ListView):
    """"View a list of purchase orders created by account staff"""
    model = Orders
    template_name = 'accounting/purchase-orders.html'


def view_order_request(request, pk):
    requestorders = RequestOrders.objects.get(pk=pk)
    price_list = ItemPrices.objects.filter(item=requestorders.item)
    context = {
        'price_list': price_list,
        'requestorders': requestorders
    }
    return render(request, 'accounting/purchase-order-create.html', context)
